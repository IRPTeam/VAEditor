Перем VanessaTabs;

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗаполнитьНастройкиРедактора();

КонецПроцедуры

&НаКлиенте
Процедура ОпцииПередСворачиванием(Элемент, Строка, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныПроцедурыИФункции

&НаКлиенте
Функция ПрочитатьСтрокуJSON(ТекстJSON, ПрочитатьВСоответствие = Истина)
	
	Если ПустаяСтрока(ТекстJSON) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоляДаты = Новый Массив;
	ПоляДаты.Добавить("CreationDate");
	ПоляДаты.Добавить("date");
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(ТекстJSON);
	Возврат ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие, ПоляДаты);
	
КонецФункции

&НаКлиенте
Функция ЗаписатьСтрокуJSON(Данные)
	
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет);
	ЗаписьJSON = Новый ЗаписьJSON();
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

&НаКлиенте
Процедура ДобавитьПодчиненныеНастройки(НаборЭлементов, Данные, ТекЗначение, ПоУмолчанию)
	
	СхемаРеквизита = Данные.Получить("schema");
	СписокЗначений = Новый СписокЗначений;
	Для каждого Реквизит из СхемаРеквизита Цикл
		МассивИмен = СтрРазделить(Реквизит.Ключ, ".");
		Ключ = МассивИмен.Получить(МассивИмен.ВГраница());
		СписокЗначений.Добавить(Реквизит.Значение, Ключ);
	КонецЦикла;
	СписокЗначений.СортироватьПоПредставлению();
		
	Для каждого ЭлементСписка из СписокЗначений Цикл
		Ключ = ЭлементСписка.Представление;
		СхемаРеквизита = ЭлементСписка.Значение;
		НоваяСтрока = НаборЭлементов.Добавить();
		НоваяСтрока.Наименование = Ключ;
		НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
		Попытка 
			НоваяСтрока.Значение = ЗаписатьСтрокуJSON(ТекЗначение.Получить(Ключ));
		Исключение
		КонецПопытки;
		Если СхемаРеквизита = Неопределено Тогда
			Продолжить;
		Иначе
			Попытка 
				НоваяСтрока.Тип = СхемаРеквизита.Получить("type");
				НоваяСтрока.Описание = СхемаРеквизита.Получить("description");
				НоваяСтрока.ПоУмолчанию = ЗаписатьСтрокуJSON(СхемаРеквизита.Получить("defaultValue"));
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНастройкиРедактора()
	
	VanessaTabs = ВладелецФормы.Элементы.VanessaEditor.Документ.defaultView.VanessaTabs;
	НаборОпций = ПрочитатьСтрокуJSON(VanessaTabs.options);
	ТекущиеНастройки = ПрочитатьСтрокуJSON(VanessaTabs.current.options);

	НаборЭлементов = Опции.ПолучитьЭлементы();
	НаборЭлементов.Очистить();
	Для каждого Опция из НаборОпций Цикл
		Ключ = Опция[0];
		Элемент = Опция[1];
		ТекЗначение = ТекущиеНастройки.Получить(Ключ);
		ПоУмолчанию = Элемент.Получить("defaultValue");
		НоваяСтрока = НаборЭлементов.Добавить();
		НоваяСтрока.Наименование = Ключ;
		НоваяСтрока.ТекЗначение = ЗаписатьСтрокуJSON(ТекЗначение);
		НоваяСтрока.ПоУмолчанию = ЗаписатьСтрокуJSON(ПоУмолчанию);
		НоваяСтрока.Значение = НоваяСтрока.ТекЗначение;
		СхемаРеквизита = Элемент.Получить("schema");
		Если СхемаРеквизита = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока.Схема = ЗаписатьСтрокуJSON(СхемаРеквизита);
		НоваяСтрока.Описание = СхемаРеквизита.Получить("description");
		Если ПустаяСтрока(НоваяСтрока.Описание) Тогда
			НоваяСтрока.Описание = СхемаРеквизита.Получить("markdownDescription");
		КонецЕсли;
		НоваяСтрока.Тип = СхемаРеквизита.Получить("type");
		Если ПустаяСтрока(НоваяСтрока.Тип) Тогда 
			НаборТипов = СхемаРеквизита.Получить("anyOf");
			Если НаборТипов = Неопределено Тогда
				ДобавитьПодчиненныеНастройки(НоваяСтрока.ПолучитьЭлементы(), Элемент, ТекЗначение, ПоУмолчанию);
			Иначе
				НоваяСтрока.Тип = ЗаписатьСтрокуJSON(НаборТипов);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииПередНачаломИзменения(Элемент, Отказ)
	
	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	ПолеФормы = Элементы.ОпцииЗначение;
	Если Данные.Тип = "string" Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
		ПолеФормы.ОграничениеТипа = ОписаниеТипа;
		Данные.Значение = ПрочитатьСтрокуJSON(Данные.ТекЗначение);
		Схема = ПрочитатьСтрокуJSON(Данные.Схема);
		Перечисление = Схема.Получить("enum");
		Если ТипЗнч(Перечисление) = Тип("Массив") Тогда
			ПолеФормы.РедактированиеТекста = Ложь;
			ПолеФормы.РежимВыбораИзСписка = Истина;
			ПолеФормы.КнопкаВыпадающегоСписка = Истина;
			ПолеФормы.СписокВыбора.Очистить();
			Для каждого ЭлементПеречисления из Перечисление Цикл
				ПолеФормы.СписокВыбора.Добавить(ЭлементПеречисления);
			КонецЦикла;
		Иначе
			ПолеФормы.СписокВыбора.Очистить();
			ПолеФормы.РежимВыбораИзСписка = Ложь;
			ПолеФормы.РедактированиеТекста = Истина;
			ПолеФормы.КнопкаВыпадающегоСписка = Ложь;
		КонецЕсли;
	ИначеЕсли Данные.Тип = "boolean" Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Булево"));
		ОписаниеТипа = Новый ОписаниеТипов(МассивТипов);
		ПолеФормы.ОграничениеТипа = ОписаниеТипа;
		ПолеФормы.РежимВыбораИзСписка = Ложь;
		ПолеФормы.РедактированиеТекста = Ложь;
		ПолеФормы.КнопкаВыпадающегоСписка = Ложь;
		ПолеФормы.СписокВыбора.Очистить();
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Данные.Значение) Тогда
		Если Данные.ТекЗначение <> "null" Тогда
			Данные.ТекЗначение = Данные.ПоУмолчанию;
			Данные.Значение = Данные.ПоУмолчанию;
		КонецЕсли;
	Иначе
		Данные.ТекЗначение = ЗаписатьСтрокуJSON(Данные.Значение);
		Данные.Значение = Данные.ТекЗначение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпцииЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	Данные = Элементы.Опции.ТекущиеДанные;
	Если Данные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтандартнаяОбработка = Ложь;
	
	Если Данные.ТекЗначение <> "null" Тогда
		Данные.Значение = ПрочитатьСтрокуJSON(Данные.ПоУмолчанию);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
